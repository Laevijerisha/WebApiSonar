Ù
ID:\Microservice\Microservice\Webapis\Read\Controllers\DoctorController.cs
	namespace 	
Create
 
. 
Controllers 
; 
[ 
Route 
( 
$str 
) 
] 
[ 
ApiController 
] 
public		 
class		 
DoctorController		 
:		 
ControllerBase		  .
{

 
private 	
Appdbcontext 
context 
;  
public 
DoctorController	 
( 
Appdbcontext &
context' .
). /
{ 
this 
. 	
context	 
= 
context 
; 
} 
[ 
HttpGet 

]
 
public 
async	 
Task 
< 
IEnumerable 
<  
DoctorModel  +
>+ ,
>, -
UserList. 6
(6 7
)7 8
{ 
return 

await 
context 
. 
Doctors  
.  !
ToListAsync! ,
(, -
)- .
;. /
} 
[ 
HttpGet 

(
 
$str 
) 
] 
public 
async	 
Task 
< 
IActionResult !
>! "
GetUserListById# 2
(2 3
int3 6
id7 9
)9 :
{ 
if 
( 
id 

< 
$num 
) 
return 

BadRequest 
( 
) 
; 
var 
Doctor 
= 
await 
context 
. 
Doctors &
.& '
FirstOrDefaultAsync' :
(: ;
m; <
=>= ?
m@ A
.A B
IdB D
==E G
idH J
)J K
;K L
if 
( 
Doctor 
== 
null 
) 
return 
NotFound 
( 
) 
; 
return 

Ok 
( 
Doctor 
) 
; 
} 
} ê
>D:\Microservice\Microservice\Webapis\Read\Data\Appdbcontext.cs
	namespace 	
Read
 
. 
Data 
; 
public 
class 
Appdbcontext 
: 
	DbContext %
{ 
public 

Appdbcontext 
( 
DbContextOptions (
<( )
Appdbcontext) 5
>5 6
options7 >
)> ?
:@ A
baseB F
(F G
optionsG N
)N O
{ 
}

 
public 

DbSet 
< 
DoctorModel 
> 
Doctors %
{% &
get' *
;* +
set, /
;/ 0
}1 2
} Ê
?D:\Microservice\Microservice\Webapis\Read\Models\DoctorModel.cs
	namespace 	
Read
 
. 
Models 
; 
public 
class 
DoctorModel 
{ 
[ 
Key 
] 
public 

int 
Id 
{ 
get 
; 
set 
; 
} 
public 

string 
? 
Name 
{ 
get 
; 
set "
;" #
}$ %
public		 

int		 
Age		 
{		 
get		 
;		 
set		 
;		 
}		  !
public

 

string

 
?

 
Email

 
{

 
get

 
;

 
set

  #
;

# $
}

% &
public 

string 
? 
Specialization !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 

int 
? 
ContactNumber 
{ 
get  #
;# $
set% (
;( )
}* +
public 

string 
? 
Location 
{ 
get !
;! "
set# &
;& '
}( )
public 

string 
k 
; 
} É
4D:\Microservice\Microservice\Webapis\Read\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder		 
.		 
Services		 
.		 #
AddEndpointsApiExplorer		 (
(		( )
)		) *
;		* +
builder

 
.

 
Services

 
.

 
AddSwaggerGen

 
(

 
)

  
;

  !
builder 
. 
Services 
. 
AddDbContext 
< 
Appdbcontext *
>* +
(+ ,
options, 3
=>4 6
options7 >
.> ?
UseMySql? G
(G H
builderH O
.O P
ConfigurationP ]
.] ^
GetConnectionString^ q
(q r
$str	r Ö
)
Ö Ü
,
Ü á
new
á ä 
MySqlServerVersion
ã ù
(
ù û
new
û °
Version
¢ ©
(
© ™
)
™ ´
)
´ ¨
)
¨ ≠
)
≠ Æ
;
Æ Ø
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app 
. 
UseHttpsRedirection 
( 
) 
; 
app 
. 
UseAuthorization 
( 
) 
; 
app 
. 
MapControllers 
( 
) 
; 
app 
. 
Run 
( 
) 	
;	 
